#!/bin/bash
set -eu
shopt -s dotglob nullglob

# Get the filenames
if [[ ${1-} = - ]]; then
	readarray -t src # stdin
elif (( $# > 0 )); then
	src=("$@") # args
else
	src=(*) # current dir
fi

# If stdin is not a terminal, reconnect the terminal to it. Useful in two cases:
#   1. Filenames were read from stdin.
#   2. User forgot to specify '-' to indicate that filenames are on stdin.
# In any case, if we don't reconnect the terminal to stdin - `vi` will fuck up
# the terminal and `mv` won't ask for confirmation despite the '-i' option.
[[ -t 0 ]] || exec </dev/tty

# Exit if no filenames found
(( ${#src[@]} )) || { echo "No files to rename."; exit 1; }

# Create temporary file for editing, clean it up on exit
tmp=$(mktemp "${TMPDIR:-/tmp}/virename.XXX")
# shellcheck disable=SC2064 # immediate $tmp expansion is intentional
trap "rm -f '$tmp'" EXIT

# Print the filenames to the temporary file
printf '%s\n' "${src[@]}" > "$tmp"

# Open an $EDITOR or vi to edit the filenames.
# Reconnect tty to the editor in case we read filenames from stdin
${EDITOR:-vi} "$tmp"

# Read the edited filenames back
readarray -t dest < "$tmp"

# Sanity check
(( ${#src[@]} == ${#dest[@]} )) || { echo "Number of lines changed, cannot proceed."; exit 1; }

# Rename the files that were edited
for ((i=0; i < ${#src[@]}; ++i)); do
	[[ ${src[i]} = "${dest[i]}" ]] || ${MV:=mv -vi} "${src[i]}" "${dest[i]}"
done

echo "Done!"
